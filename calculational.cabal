cabal-version: 1.12

-- This file has been generated from package.yaml by hpack version 0.31.0.
--
-- see: https://github.com/sol/hpack
--
-- hash: 8af5011748cef2824d8b6c6c52c00a5001dddbd1265e52a492ce0c6bb54b22b8

name:           calculational
version:        0.1.1
synopsis:       Quantifiers, Lists, Sets in a Dijkstra style.
description:    I implement a Dijkstra style notation for quantifiers, lists, sets and expressions that can be evaluated. The library could reference haskell variables. The expresions are translated using quasiquotes and template-haskell. I used the library to show some concepts of applied logic and discrete math courses for Computer and Systems engineering students.
category:       Calculational, DSL, Mathematics.
homepage:       https://github.com/pachopepe/Calculational#readme
bug-reports:    https://github.com/pachopepe/Calculational/issues
author:         Francisco Chaves
maintainer:     Fancisco Chaves <pachopepe@gmail.com>
license:        MIT
license-file:   LICENSE
tested-with:    GHC == 8.4.4
build-type:     Simple

source-repository head
  type: git
  location: https://github.com/pachopepe/Calculational

library
  exposed-modules:
      Calculational.MonoidExt
      Calculational.Definitions
      Calculational
  other-modules:
      Calculational.Lexer
      Calculational.Parser
      Calculational.QuasiQuoter
      Paths_calculational
  hs-source-dirs:
      src
  default-extensions: QuasiQuotes
  build-depends:
      base >=4 && <5
    , containers
    , mtl >=2 && <3
    , multiset
    , parsec >=3 && <4
    , syb >=0 && <1
    , template-haskell >=2 && <3
  default-language: Haskell2010

test-suite spec
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  other-modules:
      CalculationalSpec
      Paths_calculational
  hs-source-dirs:
      tests
  default-extensions: QuasiQuotes
  build-depends:
      QuickCheck
    , base >=4 && <5
    , calculational
    , containers
    , hspec ==2.*
    , mtl >=2 && <3
    , multiset
    , parsec >=3 && <4
    , syb >=0 && <1
    , template-haskell >=2 && <3
  default-language: Haskell2010
  build-tool-depends: hspec-discover:hspec-discover == 2.*
